apiVersion: v1
kind: Namespace
metadata:
   name: go-cloud-service
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: go-cloud-service
  namespace: go-cloud-service
  labels:
    customer: mycustomer
    environment: development
    app: go-cloud-service
spec:
  selector:
    matchLabels:
      app: go-cloud-service
  replicas: 2
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: go-cloud-service
    spec:
      containers:
        - image: localhost:5000/go-cloud-service:0
          name: go-cloud-service
          imagePullPolicy: Always
          ports:
            - containerPort: 30001
          resources:
            requests:
              memory: "256Mi"
              cpu: "300m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          livenessProbe:
            httpGet:
              path: /
              port: 30001
            initialDelaySeconds: 20
            periodSeconds: 10
          env:
          - name: APP_ENV
            valueFrom:
              secretKeyRef:
                name: go-cloud-service
                key: app_env
          - name: APP_PORT
            valueFrom:
              secretKeyRef:
                name: go-cloud-service
                key: app_port
---
apiVersion: v1
kind: Service
metadata:
  name: go-cloud-service
  namespace: go-cloud-service
  labels:
    app: go-cloud-service
spec:
  type: ClusterIP
  ports:
    - port: 30001
  selector:
    app: go-cloud-service
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: go-cloud-service
  namespace: go-cloud-service
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: go-cloud-service
  minReplicas: 2
  maxReplicas: 4
  targetCPUUtilizationPercentage: 80
  ---